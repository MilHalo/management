<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.management.mapper.UsersMapper">
	<resultMap id="BaseResultMap" type="com.management.model.Users">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="account" property="account" jdbcType="VARCHAR" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, account, username, password, state, user_type,create_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectByAccount" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from users
		where account = #{account}
	</select>
	
	<select id="findUsersByAccountAndUsername" resultMap="BaseResultMap"
		parameterType="com.management.model.Users">
		select
		<include refid="Base_Column_List" />
		from users
		where 1=1
		<if test="user.account!=null and user.account!='' ">
			and account like  CONCAT('%',#{user.account},'%')
		</if>
		<if test="user.username!=null and user.username!='' ">
			and username like  CONCAT('%',#{user.username},'%')
		</if>
		<if test="user.state!=null and user.state!='' ">
			and state = #{user.state}
		</if>
		ORDER BY ID DESC
	</select>
	
   <select id="selectByAccountAndPwd" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from users
		where account = #{account} and  password = #{password}
	</select>
	
	

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.management.model.Users" useGeneratedKeys="true" keyProperty="id">
		insert into users (id,
		account, username,
		password, state, user_type,create_time
		)
		values
		(#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR}, 
		#{userType,jdbcType=VARCHAR}, 
		#{createTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.management.model.Users" useGeneratedKeys="true" keyProperty="id">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.management.model.Users">
		update users
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByAccountSelective" parameterType="com.management.model.Users">
		update users
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where account = #{account,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.management.model.Users">
		update users
		set
		account = #{account,jdbcType=VARCHAR},
		username =
		#{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		user_type = #{userType,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	
	
	<select id="getUserByUserType" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from users
		where user_type = #{userType}
	</select>
</mapper>